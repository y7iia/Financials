import streamlit as st
import pandas as pd
import yfinance as yf
import logging

# Configure logger
logging.basicConfig(format='%(asctime)s - %(levelname)s - %(message)s', level=logging.INFO)

# Create a dictionary of ticker symbols to company names
# Create a dictionary of sector to ticker symbols

tasi = {
إدارة وتطوير العقارات: [4090, 4321, 4320, 4150, 4323, 4020, 4300, 4250, 4220, 4322, 4310, 4100, 4230]
إنتاج الأغذية : [2270, 2280, 2050, 6070, 6040, 6020, 6010, 2281, 6001, 6050, 2100, 4080, 6090, 2283, 2282, 6060, 2284]
الاتصالات: [7020, 7040, 7030, 7010]
الاعلام والترفيه: [4210, 4070, 4072, 4071]
البتروكيماويات: [2250, 2310, 2060, 2170, 2330, 2010, 2380, 2210, 2001, 2020, 2290, 2350]
المواد الاساسية: [1321, 2223, 1301, 1211, 1320, 2300, 3007, 1322, 2090, 1210, 2200, 2150, 2360, 3008, 2220, 1202, 1304, 1201, 2240, 2180]
التأمين : [8210, 8100, 8040, 8170, 8160, 8070, 8260, 8250, 8020, 8150, 8012, 8060, 8190, 8280, 8240, 8030, 8230, 8311, 8180, 8010, 8200, 8270, 8310, 8300, 8050, 8120]
الخدمات المالية: [4081, 1182, 2120, 1183, 1111, 4280, 4082, 4130]
البنوك: [1080, 1030, 1010, 1140, 1020, 1060, 1120, 1050, 1150, 1180]
الرعاية الصحية : [4013, 2230, 4005, 4002, 4014, 4009, 2140, 4004, 4007]
أسمنت: [3050, 3092, 3002, 3005, 3020, 3010, 3030, 3001, 3060, 3004, 3080, 3090, 3091, 3003, 3040]
المواد الرأسمالية: [1302, 1214, 1303, 1212, 2160, 2040, 4142, 2370, 4141, 2320, 4140, 4110, 2110]
تجزئة وتوزيع السلع الاستهلاكية: [4006, 4001, 4160, 4162, 4163, 4161, 4164, 4061]
النقل: [4261, 4262, 4260, 4031, 4040, 2190, 4263]
المرافق العامة: [2083, 2081, 2080, 2082, 5110]
الادوية: [4016, 4015, 2070]
الخدمات الاستهلاكية: [4290, 1820, 1810, 1830, 4170, 6002, 6015, 4292, 6012, 6013, 6014, 4291]
الخدمات التجارية والمهنية: [1832, 1831, 4270, 1833, 6004]
تجزئة وتوزيع السلع الكمالية: [4051, 4240, 4192, 4190, 4003, 4050, 4191, 4008]
التطبيقات وخدمات التقنية: [7203, 7201, 7204, 7200, 7202]
السلع طويلة الاجل: [2340, 4012, 4180, 4011, 2130, 1213]
الطاقة: [4030, 2222, 2382, 4200, 2381, 2030]
}

# Create a dictionary of ticker symbols to company names
companies = {1010: 'الرياض',
 1020: 'الجزيرة',
 1030: 'استثمار',
 1050: 'السعودي الفرنسي',
 1060: 'الأول',
 1080: 'العربي الوطني',
 1111: 'مجموعة تداول',
 1120: 'الراجحي',
 1140: 'البلاد',
 1150: 'الإنماء',
 1180: 'الأهلي السعودي',
 1182: 'أملاك العالمية',
 1183: 'سهل',
 1201: 'تكوين ',
 1202: 'مبكو',
 1210: 'بي سي آى',
 1211: 'معادن',
 1212: 'أسترا الصناعية',
 1213: 'نسيج',
 1214: 'الحسن شاكر',
 1301: 'أسلاك',
 1302: 'بوان',
 1303: 'صناعات كهربائية',
 1304: 'اليمامة للحديد',
 1320: 'الأنابيب السعودية',
 1321: 'أنابيب الشرق',
 1322: 'اماك',
 1810: 'سيرا القابضة',
 1820: 'مجموعة الحكير',
 1830: 'وقت اللياقة',
 1831: 'مهارة',
 1832: 'صدر',
 1833: 'الموارد',
 2001: 'كيمانول',
 2010: 'سابك',
 2020: 'سابك للمغذيات الزراعية',
 2030: 'المصافي',
 2040: 'الخزف السعودي',
 2050: 'صافولا',
 2060: 'التصنيع',
 2070: 'الدوائية',
 2080: 'غازكو',
 2081: 'الخريّف لتقنية المياه والطاقة',
 2082: 'اكوا باور',
 2083: 'مرافق',
 2090: 'جبسكو',
 2100: 'وفرة',
 2110: 'الكابلات',
 2120: 'المتطورة',
 2130: 'صدق',
 2140: 'أيان للاستثمار',
 2150: 'زجاج',
 2160: 'أميانتيت ',
 2170: 'اللجين القابضة',
 2180: 'فيبكو',
 2190: 'سيسكو القابضة',
 2200: 'أنابيب *',
 2210: 'نماء للكيماويات',
 2220: 'معدنية ',
 2222: 'أرامكو السعودية',
 2223: 'لوبريف',
 2230: 'الكيميائية السعودية القابضة',
 2240: 'الزامل للصناعة',
 2250: 'المجموعة السعودية',
 2270: 'سدافكو',
 2280: 'المراعي',
 2281: 'تنمية',
 2282: 'نقي',
 2283: 'المطاحن الأولى',
 2284: 'المطاحن الحديثة',
 2290: 'ينساب',
 2300: 'صناعة الورق ',
 2310: 'سبكيم العالمية',
 2320: 'البابطين',
 2330: 'المتقدمة',
 2340: 'العبداللطيف',
 2350: 'كيان السعودية',
 2360: 'الفخارية',
 2370: 'مسك',
 2380: 'بترو رابغ ',
 2381: 'الحفر العربية',
 2382: 'أديس القابضة',
 3001: 'أسمنت حائل',
 3002: 'أسمنت نجران',
 3003: 'أسمنت المدينة',
 3004: 'أسمنت الشمالية',
 3005: 'ام القرى',
 3007: 'زهرة الواحة للتجارة',
 3008: 'الكثيري القابضة',
 3010: 'أسمنت العربية',
 3020: 'أسمنت اليمامة',
 3030: 'أسمنت السعودية',
 3040: 'أسمنت القصيم',
 3050: 'أسمنت الجنوبية',
 3060: 'أسمنت ينبع',
 3080: 'أسمنت الشرقية',
 3090: 'أسمنت تبوك',
 3091: 'أسمنت الجوف',
 3092: 'أسمنت الرياض',
 4001: 'أسواق ع العثيم',
 4002: 'المواساة',
 4003: 'إكسترا',
 4004: 'دله الصحية',
 4005: 'رعاية',
 4006: 'أسواق المزرعة',
 4007: 'الحمادي',
 4008: 'ساكو',
 4009: 'المستشفى السعودي الألماني',
 4011: 'لازوردي',
 4012: 'الأصيل',
 4013: 'د. سليمان الحبيب',
 4014: 'دار المعدات ',
 4015: 'جمجوم فارما',
 4016: 'أفالون فارما',
 4020: 'العقارية',
 4030: 'البحري',
 4031: 'الخدمات الأرضية',
 4040: 'سابتكو ',
 4050: 'ساسكو',
 4051: 'باعظيم',
 4061: 'أنعام القابضة',
 4070: 'تهامة للإعلان',
 4071: 'العربية',
 4072: 'مجموعة إم بي سي',
 4080: 'سناد القابضة',
 4081: 'النايفات',
 4082: 'مرنة',
 4090: 'طيبة',
 4100: 'مكة للإنشاء',
 4110: 'باتك',
 4130: 'الباحة ',
 4140: 'صادرات',
 4141: 'العمران',
 4142: 'كابلات الرياض',
 4150: 'التعمير',
 4160: 'ثمار ',
 4161: 'بن داود',
 4162: 'المنجم للأغذية',
 4163: 'الدواء',
 4164: 'النهدي',
 4170: 'شمس ',
 4180: 'مجموعة فتيحي',
 4190: 'جرير',
 4191: 'أبو معطي',
 4192: 'السيف غاليري',
 4200: 'الدريس',
 4210: 'الأبحاث و الإعلام',
 4220: 'إعمار ',
 4230: 'البحر الأحمر ',
 4240: 'الحكير',
 4250: 'جبل عمر',
 4260: 'بدجت السعودية',
 4261: 'ذيب',
 4262: 'لومي',
 4263: 'سال',
 4270: 'طباعة وتغليف',
 4280: 'المملكة ',
 4290: 'الخليج للتدريب',
 4291: 'الوطنية للتربية والتعليم',
 4292: 'عطاء التعليمية',
 4300: 'دار الأركان',
 4310: 'مدينة المعرفة',
 4320: 'الأندلس العقارية',
 4321: 'المراكز العربية',
 4322: 'رتال',
 4323: 'سمو ',
 5110: 'كهرباء السعودية',
 6001: 'حلواني إخوان',
 6002: 'هرفي للأغذية',
 6004: 'كاتريون',
 6010: 'نادك',
 6012: 'ريدان الغذائية',
 6013: 'التطويرية الغذائية',
 6014: 'الأمار',
 6015: 'أمريكانا',
 6020: 'جاكو',
 6040: 'تبوك الزراعية ',
 6050: 'الأسماك ',
 6060: 'الشرقية للتنمية',
 6070: 'الجوف',
 6090: 'جازادكو',
 7010: 'اس تي سي',
 7020: 'إتحاد إتصالات',
 7030: 'زين السعودية ',
 7040: 'عذيب للاتصالات',
 7200: 'ام آي اس',
 7201: 'بحر العرب',
 7202: 'سلوشنز',
 7203: 'عِلم',
 7204: 'توبي',
 8010: 'التعاونية',
 8012: 'جزيرة تكافل',
 8020: 'ملاذ للتأمين',
 8030: 'ميدغلف للتأمين ',
 8040: 'أليانز إس إف',
 8050: 'سلامة',
 8060: 'ولاء للتأمين',
 8070: 'الدرع العربي',
 8100: 'سايكو ',
 8120: 'إتحاد الخليج الأهلية ',
 8150: 'أسيج ',
 8160: 'التأمين العربية',
 8170: 'الاتحاد للتأمين',
 8180: 'الصقر للتأمين *',
 8190: 'المتحدة للتأمين',
 8200: 'الإعادة السعودية',
 8210: 'بوبا العربية',
 8230: 'تكافل الراجحي',
 8240: 'تشب العربية',
 8250: 'جي آي جي',
 8260: 'الخليجية العامة',
 8270: 'بروج للتأمين',
 8280: 'العالمية',
 8300: 'الوطنية',
 8310: 'أمانة للتأمين ',
 8311: 'عناية'}

# Function to fetch and aggregate financial data
def aggregate_financial_data(tickers, financial_type, frequency):
    results = []
    for ticker in tickers:
        logging.info(f"Fetching data for {ticker}")
        company = yf.Ticker(ticker)
        if frequency == "quarterly":
            net_income = company.quarterly_financials
        else:
            net_income = company.financials
        net_income.insert(loc=0, column='sheet', value=financial_type)
        net_income = net_income.reset_index(drop=False)
        net_income.insert(loc=0, column='ticker', value=ticker)
        nt_inc = net_income[net_income['Breakdown'] == 'Net Income']
        results.append(nt_inc)
    results_data = pd.concat(results)
    results_data.iloc[:, 3:] = round(results_data.iloc[:, 3:] / 1000000, 2)
    results_data = results_data.sort_values(by='ticker', ascending=False)
    return results_data

# Streamlit code
st.title('القوائم المالية لقطاعات سوق الأسهم السعودي')
st.markdown('@telmisany - برمجة يحيى التلمساني')

# Dropdown for selecting the sector
selected_sector = st.selectbox('اختر القطاع', [''] + list(tasi.keys()))

# Define a dictionary for English-Arabic frequency
dic_frq = {'yearly': 'سنوي', 'quarterly': 'ربع سنوي'}

# Dropdown for selecting the frequency in Arabic
financial_type_ARABIC = st.selectbox('اختر الفترة', [''] + list(dic_frq.values()))

# Find the corresponding English term
financial_type = [k for k, v in dic_frq.items() if v == financial_type_ARABIC][0] if financial_type_ARABIC else ""

# Button for submitting the input
if st.button("Submit") and selected_sector and financial_type:
    # Get the list of tickers for the selected sector
    tickers = tasi[selected_sector]

    # Fetch data
    df = aggregate_financial_data(tickers, "financials", financial_type)

    # Display data
    if df is not None:
        df.index.names = ['Ticker']
        df = df.rename(index=companies)
        st.write(df.T)
    else:
        st.error("تعذر جلب البيانات")

# Add a statement
st.write("> **ملاحظة: جميع الأرقام بالمليون ريال سعودي**")
st.markdown('[تطبيقات أخرى قد تعجبك](https://twitter.com/telmisany/status/1702641486792159334)')

# Add three empty lines for spacing
st.write('\n\n\n')

# Add a hyperlink to your Twitter account
st.markdown('[تابعني في منصة X](https://twitter.com/telmisany)')

# Buy me a coffee AD
image_url = 'https://i.ibb.co/dM0tT0f/buy-me-coffee.png'
link_url = 'https://www.buymeacoffee.com/y7iia'
st.markdown(f'<a href="{link_url}"><img src="{image_url}" alt="Buy me a coffee" width="200"/></a>', unsafe_allow_html=True)
